FATAL:kafka.common.InvalidOffsetException|FATAL|kafka.common.InvalidOffsetException|Attempt to append an offset (138740132) to position 38480 no larger than the last offset appended (138740133) to /grid/kafka-logs/SR_DEV-0/00000000000138547024.index.||||Resolution : Please refer article :https://support.hortonworks.com/s/article/Kafka-Broker-fails-to-start-with-error-Found-a-corrupted-index-file-due-to-requirement-failed-Corrupt-index-found-index-file
FATAL:java.io.IOException|FATAL||I/O exception in append to log ÔTopic-11'|java.io.IOException|No space left on device||Please refer below article in order move data to different log directory https://community.hortonworks.com/articles/59715/migrating-kafka-partitions-data-to-new-data-folder.html
FATAL:java.lang.InternalError|FATAL|java.lang.InternalError|a fault occurred in a recent unsafe memory access operation in compiled Java code||||Please refer below article in order move data to different log directory :https://community.hortonworks.com/articles/59715/migrating-kafka-partitions-data-to-new-data-folder.html
FATAL:kafka.common.KafkaException|FATAL|kafka.common.KafkaException|"Attempt to truncate log segment to 940997615 bytes failed,  size of this log segment is 940816831 bytes."||||1. Confirm if replication factor for topics in questions is more than one and replica is in ISR. 2. Move the data from the topics to other directory and restart affected broker again.  3. Data would be recovered from other kafka broker
FATAL:java.lang.IllegalArgumentException|FATAL|java.lang.IllegalArgumentException|requirement failed||||Please refer below article : https://hortonworks.secure.force.com/articles/en_US/SolutionKB/Kafka-broker-fails-to-start-with-java-lang-IllegalArgumentException-requirement-failed
ERROR:java.io.IOException|ERROR|java.io.IOException|Too many open files|||Error while accepting connection (kafka.network.Acceptor)|Resolution : Please refer article :https://support.hortonworks.com/s/article/ERROR-Error-while-accepting-connection-kafka-network-Acceptor-java-io-IOException-Too-many-open-files-kafka-broker-stops-with-the-error
ERROR:java.lang.OutOfMemoryError|ERROR|java.lang.OutOfMemoryError|Java heap space||||"Increase Kafka heap setting with YGB in the kafka-env template via Ambari:  export KAFKA_HEAP_OPTS=""-XmxYG -XmsYG"""
ERROR:kafka.common.MessageSizeTooLargeException|ERROR|kafka.common.MessageSizeTooLargeException|"Found a message larger than the maximum fetch size of this consumer on topic GeoKafkaTest partition 7 at fetch offset 0. Increase the fetch size, or decrease the maximum message size the broker will allow."|||Error processing message stopping consumer: (kafka.consumer.ConsoleConsumer$)|Please refer below article : https://hortonworks.secure.force.com/articles/en_US/FAQ/kafka-common-MessageSizeTooLargeException-Found-a-message-larger-than-the-maximum-fetch-size-of-this-consumer-on-topic
WARN:kafka.common.BrokerEndPointNotAvailableException|WARN|kafka.common.BrokerEndPointNotAvailableException|End point with security protocol SASL_PLAINTEXT not found for broker 1001||||1. Check which protocol is configured in server.properties in listerner/advertised.listener  2. Make sure you are using same protocol 3. Try using PLAINTESXTSASL
FATAL:java.lang.IllegalArgumentException|FATAL|java.lang.IllegalArgumentException|requirement failed: inter.broker.listener.name must be a listener name defined in advertised.listeners. The valid options based on currently configured listeners are PLAINTEXT||||Resolution : Please refer article :https://support.hortonworks.com/s/article/ERROR-java-lang-IllegalArgumentException-requirement-failed-security-inter-broker-protocol-must-be-a-protocol-in-the-configured-set-of-advertised-listeners
ERROR:kafka.common.FailedToSendMessageException|ERROR|kafka.common.FailedToSendMessageException|Failed to send messages after 3 tries.|||Error in handling batch of 1 events (kafka.producer.async.ProducerSendThread)|- If cluster is kerberized check if ACL's is granted or not. If Ranger is used for authorization check for the policy. Check if Leader is available for topic in question using describe command. : 1. If Leader is not available and cluster is kerberized, ask as which user topic was created ? As of now it is not possible to create topic using any other user other than Kafka. Already a RMP is raised for this issue: https://hortonworks.jira.com/browse/RMP-9555  2. If you try to create a topic as a non kafka user, it creates a topic but with no Leader and ISR. This is a known issue. According to me, the reason behind this could be the zookeeper acl's. Once topic is created in zookeeper, its acl's will not allow kafka to read details about it. 3. If you want to create a topic as a non kafka user you need to workaround by following below steps : *** If you are not using Ranger :  1. Make sure "auto.create.topic.enable = true"  2. Give acl's for the user from which you want to create a topic, for ex :  # bin/kafka-acls.sh --authorizer kafka.security.auth.SimpleAclAuthorizer --authorizer-properties zookeeper.connect=localhost:2181 --add --allow-principal User:Bob --producer --topic Test-topic 3. Do a kinit as a user from which you want to create topic.  4. Now try to produce messages to topic as that user :  # ./kafka-console-producer.sh --broker-list <hostname-broker>:6667 --topic Test-topic --security-protocol PLAINTEXTSASL  *** If you are using Ranger : Instead of point 2 in above steps you will need to add a policy for the topic in ranger. Allow permissions for that user to produce, create, consumer. Restart kafka service. Then follow step 3 and 4 as mentioned above Not much can be derived from the pattern we have defined.
FATAL:org.apache.kafka.common.KafkaException|FATAL|org.apache.kafka.common.KafkaException|org.apache.kafka.common.KafkaException: java.security.UnrecoverableKeyException: Cannot recover key|org.apache.kafka.common.KafkaException|java.security.UnrecoverableKeyException: Cannot recover key|Fatal error during KafkaServerStartable startup. Prepare to shutdown (kafka.server.KafkaServerStartable)|Resolution : Please change password for private key : # keytool -keypasswd -alias %MyKeyAlias% -new %newpassword% -keystore KeyStore.jks
FATAL:java.lang.IllegalStateException|FATAL|java.lang.IllegalStateException|Kafka server is still starting up, cannot shut down!|||Fatal error during KafkaServer shutdown. (kafka.server.KafkaServer)|kafka broker is busy rebuiliding corrupted index hence kafka clients may fail to connect to broker. Also you may not be able to stop kafka broker.
ERROR:org.apache.zookeeper.KeeperException$NoAuthException|ERROR|||org.apache.zookeeper.KeeperException$NoAuthException|KeeperErrorCode = NoAuth for /config/topics|org.I0Itec.zkclient.exception.ZkException: org.apache.zookeeper.KeeperException$NoAuthException: KeeperErrorCode = NoAuth for /config/topics|- If cluster is kerberized check if ACL's is granted or not. If Ranger is used for authorization check for the policy. Check if Leader is available for topic in question using describe command. : 1. If Leader is not available and cluster is kerberized, ask as which user topic was created ? As of now it is not possible to create topic using any other user other than Kafka. Already a RMP is raised for this issue: https://hortonworks.jira.com/browse/RMP-9555  2. If you try to create a topic as a non kafka user, it creates a topic but with no Leader and ISR. This is a known issue. According to me, the reason behind this could be the zookeeper acl's. Once topic is created in zookeeper, its acl's will not allow kafka to read details about it. 3. If you want to create a topic as a non kafka user you need to workaround by following below steps : *** If you are not using Ranger :  1. Make sure "auto.create.topic.enable = true"  2. Give acl's for the user from which you want to create a topic, for ex : # bin/kafka-acls.sh --authorizer kafka.security.auth.SimpleAclAuthorizer --authorizer-properties zookeeper.connect=localhost:2181 --add --allow-principal User:Bob --producer --topic Test-topic 3. Do a kinit as a user from which you want to create topic.  4. Now try to produce messages to topic as that user :  # ./kafka-console-producer.sh --broker-list <hostname-broker>:6667 --topic Test-topic --security-protocol PLAINTEXTSASL  *** If you are using Ranger : Instead of point 2 in above steps you will need to add a policy for the topic in ranger. Allow permissions for that user to produce, create, consumer. Restart kafka service. Then follow step 3 and 4 as mentioned above.
DEBUG:java.io.EOFException|DEBUG|java.io.EOFException||||Connection with kafka.example.com/192.168.0.1 disconnected (org.apache.kafka.common.network.Selector)|Resolution : 1. Check with customer  which protocol they are trying to connect to Kafka ? 2. If they want to use SSL/PLAINTEXTSASL/SASL_SSL, make sure they are using correct port.3. If they are using SSL/SASL_SSL Check for SSL configurations. Reference : https://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.6.4/bk_security/content/ch_wire-kafka.html
FATAL:java.lang.StackOverflowError|FATAL|java.lang.reflect.InvocationTargetException||java.lang.StackOverflowError||Kafka Server 1001], Fatal error during KafkaServer startup. Prepare to shutdown (kafka.server.KafkaServer)|Resolution : Please refer article : https://support.hortonworks.com/s/article/Kafka-Broker-fails-to-start-with-FATAL-Error-hit-because-of-StackOverflowError-during-startup
ERROR:java.lang.ClassCastException|ERROR|java.lang.ClassCastException|java.lang.String cannot be cast to java.lang.Integer|||Error while electing or becoming leader on broker 603427813 (kafka.server.ZookeeperLeaderElector)| Resolution : Please refer article : https://support.hortonworks.com/s/article/kafka-incorrect-reassign-partitions-can-cause-kafka-brokers-not-to-start , EAR : https://hortonworks.jira.com/browse/EAR-6251, Bug : https://hortonworks.jira.com/browse/BUG-84438
FATAL:org.apache.zookeeper.KeeperException$NoAuthException|FATAL|org.I0Itec.zkclient.exception.ZkException|org.apache.zookeeper.KeeperException$NoAuthException: KeeperErrorCode = NoAuth|org.apache.zookeeper.KeeperException$NoAuthException|KeeperErrorCode = NoAuth|[Kafka Server 1001], Fatal error during KafkaServer startup. Prepare to shutdown (kafka.server.KafkaServer)|Resolution : Please refer article : https://support.hortonworks.com/s/article/Kafka-Broker-fails-to-start-with-org-apache-zookeeper-KeeperException-NoAuthException-after-disabling-Kerberos
FATAL:java.util.NoSuchElementException|FATAL|java.util.NoSuchElementException|None.get|||Fatal error during KafkaServerStartable startup. Prepare to shutdown (kafka.server.KafkaServerStartable)|Please refer article :https://support.hortonworks.com/s/article/Kafka-service-shutdown
FATAL:java.lang.ClassNotFoundException|FATAL|java.lang.ClassNotFoundException|org.apache.hadoop.metrics2.sink.kafka.KafkaTimelineMetricsReporter|||(kafka.Kafka$)|Resolution : Please refer article : https://support.hortonworks.com/s/article/Kafka-fails-to-start-due-to-Ambari-Metrics
ERROR:java.lang.IllegalStateException|ERROR|java.lang.IllegalStateException|Failed to read complete buffer for targetOffset 72379024 startPosition 2147480542 in /data/10/kafka-logs/SAMPLE_TOPIC-19/00000000000022513809.log|||[Replica Manager on Broker 1006]: Error processing fetch operation on partition [SAMPLE_TOPIC,19] offset 22513809 (kafka.server.ReplicaManager)|Resolution : Please refer article :https://support.hortonworks.com/s/article/ERROR-kafka-common-UnknownException-when-running-Spark-Kafka-streaming-job
ERROR:java.io.IOException|ERROR|java.io.IOException|Malformed line in offset checkpoint file: '||||Resolution : Please refer article: https://support.hortonworks.com/s/article/ISR-for-the-kafka-topics-unstable-with-ERROR-Malformed-line-in-offset-checkpoint-file
WARN:java.io.IOException|WARN|java.io.IOException|Connection to XXXXX.com:6667 (id: 1396312526 rack: null) failed||||Resolution : Please refer article :https://support.hortonworks.com/s/article/Kafka-Brokers-not-up-after-upgrade
FATAL:java.lang.NoClassDefFoundError|FATAL|java.lang.NoClassDefFoundError|Could not initialize class org.xerial.snappy.Snappy||||Resolution : Please refer article: https://support.hortonworks.com/s/article/Kafka-Broker-does-not-start-with-Snappy-Exception
ERROR:kafka.common.KafkaException|ERROR|kafka.common.KafkaException|fetching topic metadata for topics [Set(testlivi)] from broker [ArrayBuffer(BrokerEndPoint(0,sandbox.hortonworks.com,6667))] failed||||Resolution :Please refer article: https://support.hortonworks.com/s/article/Kafka-console-consumer-is-failing-in-secure-cluster
FATAL:java.lang.IllegalArgumentException|FATAL|java.lang.IllegalArgumentException|requirement failed: Missing required property 'version'||||Resolution : Pease refer article :https://support.hortonworks.com/s/article/Kafka-broker-fails-to-start-with-missing-required-property-version
FATAL:java.lang.IllegalArgumentException|FATAL|java.lang.IllegalArgumentException|Fatal error during KafkaServer startup. Prepare to shutdown (kafka.server.KafkaServer)||||Resolution : Pease refer article: https://support.hortonworks.com/s/article/Kafka-fails-to-start-after-cluster-is-secured-with-Kerberos
ERROR:java.lang.ClassNotFoundException|ERROR|java.lang.NoClassDefFoundError|org/apache/htrace/SamplerBuilder|java.lang.ClassNotFoundException|org.apache.htrace.SamplerBuilder||Resolution: Please refer article: https://support.hortonworks.com/s/article/ERROR-Error-writing-to-log-file-org-apache-ranger-audit-provider-BaseAuditHandler
FATAL:java.lang.StackOverflowError|FATAL|java.lang.reflect.InvocationTargetException||java.lang.StackOverflowError||Kafka Server 1001], Fatal error during KafkaServer startup. Prepare to shutdown (kafka.server.KafkaServer)|Resolution : Please refer article : https://support.hortonworks.com/s/article/Kafka-Broker-fails-to-start-with-FATAL-Error-hit-because-of-StackOverflowError-during-startup
WARN:kafka.common.BrokerEndPointNotAvailableException|WARN|kafka.common.BrokerEndPointNotAvailableException|End point with security protocol SASL_PLAINTEXT not found for broker 1001||||Please check: https://community.hortonworks.com/articles/208634/troubleshooting-kerberos-issues-in-kafka-for-produ.html
ERROR:org.apache.kafka.common.KafkaException|ERROR|org.apache.kafka.common.KafkaException|Failed to construct kafka producer|org.apache.kafka.common.KafkaException|javax.security.auth.login.LoginException: Could not login: the client is being asked for a password, but the Kafka client code does not currently support obtaining a password from the user||Please check: https://community.hortonworks.com/articles/208634/troubleshooting-kerberos-issues-in-kafka-for-produ.html
ERROR:javax.security.auth.login.LoginException|ERROR|org.apache.kafka.common.KafkaException|Failed to construct kafka producer|javax.security.auth.login.LoginException|Could not login: the client is being asked for a password||Please check: https://community.hortonworks.com/articles/208634/troubleshooting-kerberos-issues-in-kafka-for-produ.html
DEBUG:javax.net.ssl.SSLProtocolException|DEBUG|javax.net.ssl.SSLProtocolException|Handshake message sequence violation, 2|javax.net.ssl.SSLProtocolException|Handshake message sequence violation, 2|Connection with test1.example.com/192.168.9.2 disconnected|https://support.hortonworks.com/s/article/Two-way-ssl-authentication-between-client-and-broker-fails-with-javax-net-ssl-SSLProtocolException-Handshake-message-sequence-violation-2
ERROR:org.apache.kafka.common.errors.NotEnoughReplicasException|ERROR|org.apache.kafka.common.errors.NotEnoughReplicasException|||||Resolution : https://support.hortonworks.com/s/article/Producer-fails-to-write-to-topic-with-org-apache-kafka-common-errors-NotEnoughReplicasException
